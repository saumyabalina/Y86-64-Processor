$date
	Thu Feb 22 20:00:23 2024
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module testbench $end
$var wire 64 ! valP [63:0] $end
$var wire 64 " valC [63:0] $end
$var wire 4 # rB [3:0] $end
$var wire 4 $ rA [3:0] $end
$var wire 1 % mem_error $end
$var wire 4 & ifun [3:0] $end
$var wire 4 ' icode [3:0] $end
$var wire 1 ( i_error $end
$var wire 1 ) halt $end
$var reg 64 * PC [63:0] $end
$var reg 1 + clk $end
$scope module call $end
$var wire 64 , PC [63:0] $end
$var wire 1 + clk $end
$var reg 1 ) halt $end
$var reg 1 ( i_error $end
$var reg 4 - icode [3:0] $end
$var reg 4 . ifun [3:0] $end
$var reg 80 / inst [0:79] $end
$var reg 1 % mem_error $end
$var reg 4 0 rA [3:0] $end
$var reg 4 1 rB [3:0] $end
$var reg 64 2 valC [63:0] $end
$var reg 64 3 valP [63:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx 3
bx 2
bx 1
bx 0
bx /
bx .
bx -
bx ,
1+
bx *
1)
x(
bx '
bx &
1%
bx $
bx #
bx "
bx !
$end
#5
b0 *
b0 ,
0+
#10
b11 #
b11 1
b1111 $
b1111 0
b1010 "
b1010 2
b1010 !
b1010 3
0(
b110000111100110000000000000000000000000000000000000000000000000000000000001010 /
b0 &
b0 .
b11 '
b11 -
0)
0%
1+
#15
0+
b1010 *
b1010 ,
#20
b10 #
b10 1
b101 "
b101 2
b10100 !
b10100 3
b110000111100100000000000000000000000000000000000000000000000000000000000000101 /
b0 &
b0 .
b11 '
b11 -
1+
#25
0+
b10100 *
b10100 ,
#30
b1111 #
b1111 1
b101000 "
b101000 2
b11101 !
b11101 3
b10000000000000000000000000000000000000000000000000000000000000000010100010000000 /
b0 &
b0 .
b1000 '
b1000 -
1+
#35
0+
b11101 *
b11101 ,
#40
b1 #
b1 1
b11001 "
b11001 2
b100111 !
b100111 3
b110000111100010000000000000000000000000000000000000000000000000000000000011001 /
b0 &
b0 .
b11 '
b11 -
1+
#45
0+
b100111 *
b100111 ,
#50
1)
b1111 #
b1111 1
b1111 "
b1111 2
b101000 !
b101000 3
b1100000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx1001000000110010 /
b0 &
b0 .
b0 '
b0 -
1+
#55
0+
b101000 *
b101000 ,
#60
b10 #
b10 1
b11 $
b11 0
b101010 !
b101010 3
b110000000110010xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx10010000 /
b0 &
b0 .
b110 '
b110 -
0)
1+
#65
0+
b101010 *
b101010 ,
#70
b1111 #
b1111 1
b1111 $
b1111 0
b101011 !
b101011 3
b10010000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx /
b0 &
b0 .
b1001 '
b1001 -
1+
#75
0+
b101011 *
b101011 ,
#80
1)
1(
b1111 !
b1111 3
bx /
bx &
bx .
bx '
bx -
1+
#85
0+
b1111 *
b1111 ,
#90
b10000 !
b10000 3
0(
b10100010000000000000000000000000000000 /
b0 &
b0 .
b0 '
b0 -
1)
1+
#95
0+
b10000 *
b10000 ,
#100
b10001 !
b10001 3
b101000100000000000000000000000 /
b0 &
b0 .
b0 '
b0 -
1)
1+
#105
0+
b10001 *
b10001 ,
#110
b10010 !
b10010 3
b1010001000000000000000 /
b0 &
b0 .
b0 '
b0 -
1)
1+
#115
0+
b1001100 *
b1001100 ,
#120
1(
b1111 !
b1111 3
bx /
bx &
bx .
bx '
bx -
1)
1+
