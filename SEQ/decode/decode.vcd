$date
	Thu Feb 22 13:28:07 2024
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module testbench $end
$var wire 64 ! valB [63:0] $end
$var wire 64 " valA [63:0] $end
$var reg 1 # clk $end
$var reg 4 $ icode [3:0] $end
$var reg 4 % rA [3:0] $end
$var reg 4 & rB [3:0] $end
$scope module call $end
$var wire 1 # clk $end
$var wire 4 ' icode [3:0] $end
$var wire 4 ( rA [3:0] $end
$var wire 4 ) rB [3:0] $end
$var reg 64 * valA [63:0] $end
$var reg 64 + valB [63:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b1111 +
b1111 *
bx )
bx (
bx '
bx &
bx %
bx $
1#
b1111 "
b1111 !
$end
#5
b1 &
b1 )
b0 %
b0 (
b10 $
b10 '
0#
#10
b0 !
b0 +
b0 "
b0 *
1#
#15
b1111 !
b1111 +
b1111 "
b1111 *
0#
b10 &
b10 )
b1 %
b1 (
b100 $
b100 '
#20
b10 !
b10 +
b1 "
b1 *
1#
#25
b1111 !
b1111 +
b1111 "
b1111 *
0#
b11 &
b11 )
b0 %
b0 (
b101 $
b101 '
#30
b11 !
b11 +
1#
#35
b1111 !
b1111 +
0#
b1 %
b1 (
b110 $
b110 '
#40
b11 !
b11 +
b1 "
b1 *
1#
#45
b1111 !
b1111 +
b1111 "
b1111 *
0#
b0 &
b0 )
b1000 %
b1000 (
b1000 $
b1000 '
#50
b100000 !
b100000 +
1#
#55
b1111 !
b1111 +
0#
b1010 &
b1010 )
b1001 %
b1001 (
b1001 $
b1001 '
#60
b100000 !
b100000 +
b100000 "
b100000 *
1#
#65
b1111 !
b1111 +
b1111 "
b1111 *
0#
b0 &
b0 )
b10 %
b10 (
b1010 $
b1010 '
#70
b100000 !
b100000 +
b10 "
b10 *
1#
#75
b1111 !
b1111 +
b1111 "
b1111 *
0#
b1 &
b1 )
b1001 %
b1001 (
b1011 $
b1011 '
#80
b100000 !
b100000 +
b100000 "
b100000 *
1#
#85
b1111 !
b1111 +
b1111 "
b1111 *
0#
b1000 &
b1000 )
b10 %
b10 (
b11 $
b11 '
#90
1#
